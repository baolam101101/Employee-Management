@model Resit_Project.Models.Work

@{
    ViewBag.Title = "Edit";
}

<div class="card">
    <div class="card-header">
        <h3 class="text-center">Edit</h3>
    </div>
    <div class="card-body">
        <div class="col-md-4">
            @using (Html.BeginForm("Edit", "Works", new { id = Model.WorkId }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>Work</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.WorkId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("StaffId", (SelectList)ViewBag.StaffList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.CateId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CateId", (SelectList)ViewBag.CateList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PriceListId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PriceListId", (SelectList)ViewBag.PriceList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PriceListId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-info" />
                            @Html.ActionLink("Back to List", "Index", new { area = "" }, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('#CateId').change(function () {
                var categoryId = $(this).val();
                $.ajax({
                    url: '@Url.Action("GetStages", "Works")',
                    type: 'GET',
                    data: { categoryId: categoryId },
                    dataType: 'json',
                    success: function (stages) {
                        var pricelistDropdown = $('#PriceListId');
                        pricelistDropdown.empty();
                        $.each(stages, function (i, stage) {
                            pricelistDropdown.append($('<option/>').attr('value', stage.PricelistId).text(stage.Stage));
                        });
                    },
                    error: function () {
                        alert('An error occurred while retrieving stages.');
                    }
                });
            });
        });
    </script>
}
